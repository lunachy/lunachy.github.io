<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hexo+NexT搭建个人博客</title>
    <url>/2021/04/13/Hexo+NexT%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    <content><![CDATA[<p>Hexo是在Node.js框架下的一个项目，利用Node.js提供的强大功能，完成从Markdown到静态网页的转换。NexT是Hexo项目下的一个主题插件，提供可高度定制的页面外观。</p>
<h1 id="相关环境配置"><a href="#相关环境配置" class="headerlink" title="相关环境配置"></a>相关环境配置</h1><p>下载最新<a href="http://nodejs.cn/download/" target="_blank" rel="noopener">node.js</a>安装，运行<code>node -v</code>和<code>npm -v</code>，显示正常的版本则说明安装完毕。</p>
<h1 id="Hexo安装及运行"><a href="#Hexo安装及运行" class="headerlink" title="Hexo安装及运行"></a>Hexo安装及运行</h1><h2 id="Hexo安装"><a href="#Hexo安装" class="headerlink" title="Hexo安装"></a>Hexo安装</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-cli -g</span><br></pre></td></tr></table></figure>

<p>执行以下命令确认hexo已安装好，该命令会显示hexo的版本及依赖的包。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo -v</span><br></pre></td></tr></table></figure>

<p>本机显示如下：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo-cli: 3.1.0</span><br><span class="line">os: Windows_NT 10.0.18362 win32 x64</span><br><span class="line">node: 14.0.0</span><br><span class="line">v8: 8.1.307.30-node.30</span><br><span class="line">uv: 1.37.0</span><br><span class="line">zlib: 1.2.11</span><br><span class="line">brotli: 1.0.7</span><br><span class="line">ares: 1.16.0</span><br><span class="line">modules: 83</span><br><span class="line">nghttp2: 1.40.0</span><br><span class="line">napi: 6</span><br><span class="line">llhttp: 2.0.4</span><br><span class="line">openssl: 1.1.1f</span><br><span class="line">cldr: 36.1</span><br><span class="line">icu: 66.1</span><br><span class="line">tz: 2019c</span><br><span class="line">unicode: 13.0</span><br></pre></td></tr></table></figure>



<h2 id="Hexo创建及运行博客"><a href="#Hexo创建及运行博客" class="headerlink" title="Hexo创建及运行博客"></a>Hexo创建及运行博客</h2><ul>
<li><p>创建一个空白文件夹blog，作为博客根目录，在该根目录下，执行以下命令初始化博客</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br></pre></td></tr></table></figure>
</li>
<li><p>启动服务，默认是4000端口，在浏览器输入<a href="http://localhost:4000就可以访问博客了。">http://localhost:4000就可以访问博客了。</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>



</li>
</ul>
<h1 id="NexT主题插件安装及配置"><a href="#NexT主题插件安装及配置" class="headerlink" title="NexT主题插件安装及配置"></a>NexT主题插件安装及配置</h1><h2 id="安装NexT"><a href="#安装NexT" class="headerlink" title="安装NexT"></a>安装NexT</h2><p>通过git指令下载NexT最新的主题文件。</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/theme-next/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure>

<p>现在Hexo中有两份主要的配置文件，其名称都是_config.yml。 其中，一份位于站点根目录下，主要包含Hexo本身的配置；另一份位于next主题目录下，主要用于配置主题相关的选项。将前者称为站点配置文件， 后者称为主题配置文件。</p>
<h2 id="启用NexT"><a href="#启用NexT" class="headerlink" title="启用NexT"></a>启用NexT</h2><p>打开站点配置文件，  找到 theme 字段，并将其值更改为 next。</p>
<blockquote>
<p>theme: next</p>
</blockquote>
<h2 id="验证NexT"><a href="#验证NexT" class="headerlink" title="验证NexT"></a>验证NexT</h2><p>执行命令然后使用浏览器访问<a href="http://localhost:4000，查看站点是否正确运行。">http://localhost:4000，查看站点是否正确运行。</a></p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo s</span><br></pre></td></tr></table></figure>

<h2 id="配置站点及Next主题"><a href="#配置站点及Next主题" class="headerlink" title="配置站点及Next主题"></a>配置站点及Next主题</h2><h3 id="标题作者等常规配置"><a href="#标题作者等常规配置" class="headerlink" title="标题作者等常规配置"></a>标题作者等常规配置</h3><p>修改站点配置文件，title、description、author、language等。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Site</span><br><span class="line">title: Chy&#39;s Blog</span><br><span class="line">subtitle: &#39;&#39;</span><br><span class="line">description: 朝花夕拾 聊以记之</span><br><span class="line">keywords:</span><br><span class="line">author: Chy</span><br><span class="line">language: zh-CN</span><br><span class="line">timezone: &#39;&#39;</span><br></pre></td></tr></table></figure>

<h3 id="菜单项"><a href="#菜单项" class="headerlink" title="菜单项"></a>菜单项</h3><p>菜单配置包括三个部分，第一是菜单项（名称和链接），第二是菜单项的显示文本，第三是菜单项对应的图标。 NexT 使用的是 <a href="http://fontawesome.io/" target="_blank" rel="noopener">Font Awesome</a> 提供的图标， Font Awesome 提供了 600+ 的图标，可以满足绝大的多数的场景，同时无须担心在 Retina 屏幕下 图标模糊的问题。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  #about: &#x2F;about&#x2F; || user</span><br><span class="line">  #tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  #categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml || sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F; || heartbeat</span><br><span class="line"></span><br><span class="line"># Enable&#x2F;Disable menu icons.</span><br><span class="line">menu_icons:</span><br><span class="line">  enable: true</span><br></pre></td></tr></table></figure>

<h3 id="外观设定"><a href="#外观设定" class="headerlink" title="外观设定"></a>外观设定</h3><p>个人觉得Gemini的外观最好看</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Schemes</span><br><span class="line">#scheme: Muse</span><br><span class="line">#scheme: Mist</span><br><span class="line">#scheme: Pisces</span><br><span class="line">scheme: Gemini</span><br></pre></td></tr></table></figure>

<h3 id="设置头像"><a href="#设置头像" class="headerlink" title="设置头像"></a>设置头像</h3><p>编辑 <strong>主题配置文件</strong>， 修改字段 <code>avatar</code>， 值设置成头像的链接地址，图片可以传到next/source/images目录下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">avatar: &#x2F;images&#x2F;love.jpg</span><br></pre></td></tr></table></figure>

<h3 id="动态背景"><a href="#动态背景" class="headerlink" title="动态背景"></a>动态背景</h3><p>主题配置文件中找到<strong>canvas_nest</strong>，设置成<strong>ture</strong>，下面还有几个背景，但是只有一个起作用。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># Canvas-nest</span><br><span class="line">canvas_nest: true</span><br></pre></td></tr></table></figure>

<p>###社交设置</p>
<p>主要设置github、email、facebook等等社交地址。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">social:</span><br><span class="line">  GitHub: https:&#x2F;&#x2F;github.com&#x2F;lunachy || github</span><br><span class="line">  E-Mail: mailto:lunachy@163.com || envelope</span><br></pre></td></tr></table></figure>

<h3 id="初始化对应的Menu文件夹"><a href="#初始化对应的Menu文件夹" class="headerlink" title="初始化对应的Menu文件夹"></a>初始化对应的Menu文件夹</h3><p>假设要创建tags文件夹，终端中输入（前提在<strong>Hexo</strong>文件路径下）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">hexo new page &quot;tags&quot;</span><br></pre></td></tr></table></figure>

<p>编辑<code>blog/source/tags</code>中<strong>index.md</strong>文件，添加<code>type: tags</code>，其他Menu也同理创建。</p>
<h3 id="字数统计-阅读时长"><a href="#字数统计-阅读时长" class="headerlink" title="字数统计+阅读时长"></a>字数统计+阅读时长</h3><ol>
<li>安装hexo-wordcount</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>配置主题文件</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">post_wordcount:</span><br><span class="line">  item_text: true</span><br><span class="line">  wordcount: true</span><br><span class="line">  min2read: true</span><br><span class="line">  totalcount: true</span><br><span class="line">  separated_meta: true</span><br></pre></td></tr></table></figure>

<h3 id="阅读更多"><a href="#阅读更多" class="headerlink" title="阅读更多"></a>阅读更多</h3><p>在首页显示一篇文章的部分内容，并提供一个链接跳转到全文页面是一个常见的需求。在xxx.md的文章中使用</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-excerpt --save</span><br></pre></td></tr></table></figure>
<p>站点配置文件修改配置</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">excerpt_description: true</span><br></pre></td></tr></table></figure>

<h3 id="添加评论"><a href="#添加评论" class="headerlink" title="添加评论"></a>添加评论</h3><p>搜索知乎发现推荐最多的是<code>valine</code></p>
<ol>
<li><p>注册<a href="https://www.leancloud.cn/" target="_blank" rel="noopener">LeanCloud</a>并创建一个开发版应用（免费）</p>
</li>
<li><p>创建class，名称为Comment</p>
<p><img data-src="https://i.loli.net/2020/05/18/J3qF4m5beLuHUWn.png" alt=""></p>
</li>
<li><p>网站上线后添加安全域名</p>
<p><img data-src="https://i.loli.net/2020/05/18/UOwnDK5u89MoZeL.png" alt=""></p>
</li>
<li><p>修改主题配置文件</p>
<p>appid和appkey从应用keys获取</p>
<p><img data-src="https://i.loli.net/2020/05/18/GLCeTKfc87RNpo9.png" alt=""></p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">valine:</span><br><span class="line">  enable: true</span><br><span class="line">  appid:  3mcxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxHsz</span><br><span class="line">  appkey:  2HCsxxxxxxxxxxxxxxxxxxxKzVF</span><br><span class="line">  notify: false # mail notifier , https:&#x2F;&#x2F;github.com&#x2F;xCss&#x2F;Valine&#x2F;wiki,目前已不支持</span><br><span class="line">  verify: false # Verification code</span><br><span class="line">  placeholder:  # comment box placeholder</span><br><span class="line">  avatar: mm # gravatar style</span><br><span class="line">  guest_info: nick,mail,link # custom comment header</span><br><span class="line">  pageSize: 10 # pagination size</span><br></pre></td></tr></table></figure>

<p>建议将自带的CDN改成第三方CDN。<br>文件目录：next/layout/_third-party/comments/valine.swig</p>
<blockquote>
<p>//cdn.jsdelivr.net/npm/valine/dist/Valine.min.js</p>
</blockquote>
<p>官方的CDN是</p>
<blockquote>
<p>//unpkg.com/valine/dist/Valine.min.js</p>
</blockquote>
<p>更多高级用法请查看<a href="https://valine.js.org/" target="_blank" rel="noopener">valine官网</a></p>
<h3 id="阅读量统计"><a href="#阅读量统计" class="headerlink" title="阅读量统计"></a>阅读量统计</h3><ol>
<li><p>创建class，名称为Count</p>
<p><img data-src="https://i.loli.net/2020/05/18/dRAeztICQLl6kvD.png" alt=""></p>
</li>
<li><p>修改主题配置文件</p>
</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">leancloud_visitors:</span><br><span class="line">  enable: true</span><br><span class="line">  app_id: 3mcxxxxxxxxxxxxxxxxxxxxxoHsz</span><br><span class="line">  app_key: 2HxxxxxxxxxxxxxxxtKzVF</span><br></pre></td></tr></table></figure>

<h3 id="关闭新建页面的评论功能"><a href="#关闭新建页面的评论功能" class="headerlink" title="关闭新建页面的评论功能"></a>关闭新建页面的评论功能</h3><p>当集成了评论系统，所有新建的页面都将自动开启评论。若你不需要评论，请在页面的 Front-matter 里添加 <code>comments</code> 字段，并将值设置为 <code>false</code>。如下所示：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">title: All tags</span><br><span class="line">date: 2015-12-16 17:05:24</span><br><span class="line">type: &quot;tags&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br></pre></td></tr></table></figure>

<h3 id="搜索功能"><a href="#搜索功能" class="headerlink" title="搜索功能"></a>搜索功能</h3><ol>
<li>安装<code>hexo-generator-searchdb</code>插件</li>
</ol>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-generator-searchdb --save</span><br></pre></td></tr></table></figure>

<ol start="2">
<li>打开 <strong>站点配置文件</strong> 找到<code>Extensions</code>在下面添加</li>
</ol>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">search:</span><br><span class="line">  path: search.xml</span><br><span class="line">  field: post</span><br><span class="line">  format: html</span><br><span class="line">  limit: 10000</span><br></pre></td></tr></table></figure>



<h3 id="打赏功能"><a href="#打赏功能" class="headerlink" title="打赏功能"></a>打赏功能</h3><p>打开主题配置文件，找到Reward，微信支付宝收款码保存到next/source/images下。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">reward_comment: 此处应有打赏</span><br><span class="line">wechatpay: &#x2F;images&#x2F;wechatpay.jpg</span><br><span class="line">alipay: &#x2F;images&#x2F;alipay.jpg</span><br></pre></td></tr></table></figure>



<h3 id="百度统计"><a href="#百度统计" class="headerlink" title="百度统计"></a>百度统计</h3><ol>
<li><p>登录 <a href="http://tongji.baidu.com/" target="_blank" rel="noopener">百度统计</a>， 定位到站点的代码获取页面</p>
</li>
<li><p>复制 <code>hm.js?</code> 后面那串统计脚本 id，如：</p>
<p><img data-src="https://i.loli.net/2020/05/18/hyHeilB9DRM3Ad2.png" alt=""></p>
</li>
<li><p>编辑 <strong>主题配置文件</strong>， 修改字段 <code>baidu_analytics</code> 字段，值设置成你的百度统计脚本 id。</p>
</li>
</ol>
<h3 id="在右上角或者左上角实现fork-me-on-github"><a href="#在右上角或者左上角实现fork-me-on-github" class="headerlink" title="在右上角或者左上角实现fork me on github"></a>在右上角或者左上角实现fork me on github</h3><ol>
<li>在<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fgithub.com%2Fblog%2F273-github-ribbons" target="_blank" rel="noopener">GitHub Ribbons</a>或<a href="https://links.jianshu.com/go?to=http%3A%2F%2Ftholman.com%2Fgithub-corners%2F" target="_blank" rel="noopener">GitHub Corners</a>选择一款你喜欢的挂饰，拷贝方框内的代码</li>
<li>将刚刚复制的挂饰代码，添加到<code>Blog/themes/next/layout/_layout.swig</code>文件中，放在<code>&lt;div class=&quot;headband&quot;&gt;&lt;/div&gt;</code>下方，地址地换成自己的github地址。</li>
</ol>
<h3 id="点击日志会跳转错误Cannot-GET-tags-20"><a href="#点击日志会跳转错误Cannot-GET-tags-20" class="headerlink" title="点击日志会跳转错误Cannot GET /tags/%20/"></a>点击日志会跳转错误Cannot GET /tags/%20/</h3><p>把主题配置文件里menu下的 ||之前所有的空格删掉</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">menu:</span><br><span class="line">  home: &#x2F;|| home</span><br><span class="line">  #about: &#x2F;about&#x2F;|| user</span><br><span class="line">  tags: &#x2F;tags&#x2F;|| tags</span><br><span class="line">  #categories: &#x2F;categories&#x2F;|| th</span><br><span class="line">  archives: &#x2F;archives&#x2F;|| archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F;|| calendar</span><br><span class="line">  #sitemap: &#x2F;sitemap.xml|| sitemap</span><br><span class="line">  #commonweal: &#x2F;404&#x2F;|| heartbeat</span><br></pre></td></tr></table></figure>

<h3 id="侧栏中的posts打开的链接错误"><a href="#侧栏中的posts打开的链接错误" class="headerlink" title="侧栏中的posts打开的链接错误"></a>侧栏中的posts打开的链接错误</h3><p>当鼠标移到posts时, 访问的链接是<code>域名/archives/%7C%7C%20archive/</code>, 可见后面的多余了, 问题就是删除后面多余字符。</p>
<p><strong>解决多余字符</strong></p>
<p>打开博客根目录/themes/next/layout/_macro/sidebar.swig, 搜索class=”site-state-item site-state-posts”的值, 快速定位错误位置。</p>
<p>修改之前:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if config.archive_dir != '/' and site.posts.length &gt; 0 %&#125;</span><br><span class="line">             <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"site-state-item site-state-posts"</span>&gt;</span></span><br><span class="line">             &#123;% if theme.menu.archives %&#125;</span><br><span class="line">               <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(theme.menu.archives).split('||')[0] | trim &#125;&#125;"</span>&gt;</span></span><br><span class="line">             &#123;% else %&#125;</span><br><span class="line">               <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(config.archive_dir) &#125;&#125;"</span>&gt;</span></span><br><span class="line">             &#123;% endif %&#125;</span><br><span class="line">                 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"site-state-item-count"</span>&gt;</span>&#123;&#123; site.posts.length &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                 <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"site-state-item-name"</span>&gt;</span>&#123;&#123; __('state.posts') &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">               <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">             <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>修改之后:</p>
<figure class="highlight html"><table><tr><td class="code"><pre><span class="line">&#123;% if config.archive_dir != '/' and site.posts.length &gt; 0 %&#125;</span><br><span class="line">              <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"site-state-item site-state-posts"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"&#123;&#123; url_for(config.archive_dir) &#125;&#125;"</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"site-state-item-count"</span>&gt;</span>&#123;&#123; site.posts.length &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                  <span class="tag">&lt;<span class="name">span</span> <span class="attr">class</span>=<span class="string">"site-state-item-name"</span>&gt;</span>&#123;&#123; __('state.posts') &#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">              <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endif %&#125;</span><br></pre></td></tr></table></figure>

<p>将中间的判断删掉, 保留下面else的内容即可解决该问题。</p>
<h3 id="访问被api域名白名单拒绝"><a href="#访问被api域名白名单拒绝" class="headerlink" title="访问被api域名白名单拒绝"></a>访问被api域名白名单拒绝</h3><p>在valine里面设置之后，本地运行，发现，底部评论框底下显示：访问被api域名白名单拒绝,请检查你的安全域名设置。</p>
<p>解决办法：代码不仅设置了<a href="https://lunachy.com的域名，而且是放在github仓库，因此在LeanClound安全中心需添加两个网址。" target="_blank" rel="noopener">https://lunachy.com的域名，而且是放在github仓库，因此在LeanClound安全中心需添加两个网址。</a></p>
<p><img data-src="https://i.loli.net/2020/05/18/FoiRqlsdwLz1Ab2.png" alt=""></p>
<h1 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h1><p><a href="https://valine.js.org/" target="_blank" rel="noopener">valine</a></p>
<p><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT</a></p>
<p><a href="https://www.jianshu.com/p/9f0e90cc32c2" target="_blank" rel="noopener">Hexo-NexT配置超炫网页效果</a></p>
<p><a href="https://www.jianshu.com/p/728a9594bb6c" target="_blank" rel="noopener">hexo+next使用Valine评论系统</a></p>
<p><a href="https://blog.csdn.net/loze/article/details/94206726" target="_blank" rel="noopener">Hexo+NexT（零）：最全Hexo+Next搭建博客教程</a></p>
]]></content>
      <categories>
        <category>闲杂技术</category>
      </categories>
      <tags>
        <tag>博客</tag>
        <tag>Hexo</tag>
        <tag>NexT</tag>
      </tags>
  </entry>
  <entry>
    <title>Jetbrains激活及相关问题</title>
    <url>/2021/04/14/Jetbrains%E6%BF%80%E6%B4%BB%E5%8F%8A%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<h1 id="激活报错如何解决"><a href="#激活报错如何解决" class="headerlink" title="激活报错如何解决"></a>激活报错如何解决</h1><h2 id="Certificate-used-to-sign-the-license-is-not-signed-by-Jetbrains-root-certificate"><a href="#Certificate-used-to-sign-the-license-is-not-signed-by-Jetbrains-root-certificate" class="headerlink" title="Certificate used to sign the license is not signed by Jetbrains root certificate"></a>Certificate used to sign the license is not signed by Jetbrains root certificate</h2><p>软件用Jar包破解过，解决方法如下</p>
<ol>
<li><p>在软件菜单点击<strong>Help –&gt; Edit Custom VM Options</strong>（如无法打开菜单，请点击试用30天，如试用已结束可以直接修改xxx.vmoptions文件（右键点击文件，以记事本打开，修改后保存关闭），一般在软件安装目录的config文件夹）<br>删除所有以 <strong>-javaagent:xxx</strong> 开头的行</p>
</li>
<li><p>检查<strong>hosts</strong>文件，右键点击文件，以记事本打开，删除所有出现<strong>jetbrains</strong>的行，然后保存关闭</p>
<p>windows的hosts文件位于：C:/Windows/System32/Drivers/etc/hosts<br>linux或mac的hosts文件位于：/etc/hosts</p>
</li>
<li><p>重启软件输入账号密码即可</p>
</li>
</ol>
<h2 id="Jetbrains-Account-connection-error"><a href="#Jetbrains-Account-connection-error" class="headerlink" title="Jetbrains Account connection error"></a>Jetbrains Account connection error</h2><p><img data-src="https://i.loli.net/2021/04/14/jPuMESxQiNOsFgB.png" alt=""></p>
<ol>
<li><p>检查hosts文件，右键点击文件，以记事本打开，删除所有出现jetbrains的行，然后保存关闭</p>
<p>windows的hosts文件位于：C:/Windows/System32/Drivers/etc/hosts<br>linux或mac的hosts文件位于：/etc/hosts</p>
</li>
<li><p>重启软件输入账号密码即可</p>
</li>
<li><p>如果仍不能正常激活，请参考下<a href="https://blog.csdn.net/axiebuzhen/article/details/106817066" target="_blank" rel="noopener">https://blog.csdn.net/axiebuzhen/article/details/106817066</a></p>
</li>
</ol>
<h2 id="Authorization-failed-Wrong-username-or-password"><a href="#Authorization-failed-Wrong-username-or-password" class="headerlink" title="Authorization failed: Wrong username or password"></a>Authorization failed: Wrong username or password</h2><ol>
<li><p>打开<a href="https://account.jetbrains.com/login" target="_blank" rel="noopener">官网登陆页面</a>，输入账号密码点击Sign In，确认下是否能登陆成功，如果可以登陆成功且账号有授权，则账号无问题，如果登陆不成功，及时和客服反馈。</p>
<p><img data-src="https://i.loli.net/2021/04/14/IRopV8aKg1ek425.png" alt=""></p>
</li>
</ol>
<ol start="2">
<li><p>检查下账号密码是否输入错误，使用复制粘贴的方式，避免输入错误。</p>
</li>
<li><p>如果是点击激活要等好久才提示用户名或密码错误，则可能是网路问题，建议开手机热点或重启试试。</p>
</li>
</ol>
<h1 id="成品账号如何激活"><a href="#成品账号如何激活" class="headerlink" title="成品账号如何激活"></a>成品账号如何激活</h1><ol>
<li>会发送可用的账号和密码</li>
<li>打开软件，在激活界面，选择JB Account，输入发送的账号密码即可（激活自己账号或教育邮箱独享请往后看）</li>
<li>如果已经点了试用的可以在软件菜单点击Help –&gt; Register</li>
</ol>
<p><img data-src="https://i.loli.net/2021/04/13/uULbimj7snqQwVf.png" alt=""></p>
<h1 id="如何注册Jetbrains账号及确保账号No-Available-Licenses"><a href="#如何注册Jetbrains账号及确保账号No-Available-Licenses" class="headerlink" title="如何注册Jetbrains账号及确保账号No Available Licenses"></a>如何注册Jetbrains账号及确保账号No Available Licenses</h1><ol>
<li>如还没有Jetbrains账号，打开<a href="https://account.jetbrains.com/login" target="_blank" rel="noopener">官网注册页面</a>，输入自己的邮箱点击Sign Up，然后该邮箱地址会收到一封邮件，确认下即可，新账号的状态肯定是No Available Licenses。</li>
</ol>
<p><img data-src="https://i.loli.net/2021/04/13/S7h1JV6g5XvLB8R.png" alt=""></p>
<ol start="2">
<li><p>如已有Jetbrains账号，打开<a href="https://account.jetbrains.com/login" target="_blank" rel="noopener">官网登陆页面</a>，输入自己的账号密码点击Sign In，看下账号状态，务必确保No Available Licenses，如果是license suspended或者存在可用的license，则需要重新注册一个账号。<br><img data-src="https://i.loli.net/2021/04/14/IRopV8aKg1ek425.png" alt=""></p>
<p>如坚持用原来的账号，则需要删除账号，再用原邮箱重新注册。</p>
   <img data-src="https://i.loli.net/2021/04/13/4UiaJD5SgoYhBFX.png" alt="" style="zoom:80%;" />



</li>
</ol>
<h1 id="自己账号如何激活"><a href="#自己账号如何激活" class="headerlink" title="自己账号如何激活"></a>自己账号如何激活</h1><ol>
<li><p>会发送一串链接</p>
</li>
<li><p>首先注册账号（如已有请忽略）和检查账号状态，具体参见上面</p>
<p>[如何注册Jetbrains账号及确保账号No Available Licenses](#如何注册Jetbrains账号及确保账号No Available Licenses)</p>
</li>
<li><p>点击发送的链接，网页滑到底，点击I Accept，然后用你的Jetbrains账号密码登陆即可，网页会显示授权有效期及可激活的产品等信息。</p>
<img data-src="https://i.loli.net/2021/04/13/bnWzcekgH913IdJ.png" alt="" style="zoom:80%;" />
</li>
<li><p>若打开链接显示已过期或者I accept按钮不能点击，尝试换个浏览器或者用手机试试，正常都是有效链接。</p>
</li>
</ol>
<h1 id="教育邮箱独享如何激活"><a href="#教育邮箱独享如何激活" class="headerlink" title="教育邮箱独享如何激活"></a>教育邮箱独享如何激活</h1><ol>
<li><p>会发送edu邮箱和密码，注意edu邮箱和Jetbrains账号独立不相关。</p>
</li>
<li><p>首先注册账号（如已有请忽略）和检查账号状态，具体参见上面</p>
<p>[如何注册Jetbrains账号及确保账号No Available Licenses](#如何注册Jetbrains账号及确保账号No Available Licenses)</p>
</li>
<li><p>打开<a href="https://www.jetbrains.com/shop/eform/students" target="_blank" rel="noopener">学生申请网址</a> 按图示填写，其余地方和图上保持一致就行，最后点击申请免费产品。<br><img data-src="https://i.loli.net/2021/04/13/6wCMsNntaGZrOge.png" alt=""></p>
</li>
<li><p>安装foxmail邮箱管理软件<br>windows下载地址：<a href="https://www.foxmail.com/win/download" target="_blank" rel="noopener">https://www.foxmail.com/win/download</a><br>mac下载地址：<a href="https://www.foxmail.com/mac/download" target="_blank" rel="noopener">https://www.foxmail.com/mac/download</a></p>
</li>
<li><p>打开foxmail软件，新建其它邮箱，输入发送的edu邮箱和密码，点击创建。</p>
</li>
<li><p>打开收件箱中的标题为Jetbrains Educational Pack Confirmation的邮件，点击其中的follow this link链接。<br><img data-src="https://i.loli.net/2021/04/14/rxSOAftWQa4le65.png" alt=""></p>
</li>
<li><p>跳转到EDU的订阅协议，滑到底，点击右下方的I Accept按钮，跳转到Jetbrains登陆页面。</p>
<p><img data-src="https://i.loli.net/2021/04/14/GFudQLwxYogni9M.jpg" alt=""></p>
</li>
<li><p>若打开链接显示已过期或者I accept按钮不能点击，尝试换个浏览器或者用手机试试，正常都是有效链接。</p>
</li>
<li><p>然后用你的Jetbrains账号密码登陆即可，网页会显示授权有效期及可激活的产品等信息。</p>
<img data-src="https://i.loli.net/2021/04/13/bnWzcekgH913IdJ.png" alt="" style="zoom:80%;" />
</li>
<li><p>若需要修改邮箱密码，请打开网页端<a href="https://exmail.qq.com/login" target="_blank" rel="noopener">登录地址</a>，输入edu邮箱和密码，可能需要绑定微信，比较麻烦，一般不建议修改。</p>
</li>
</ol>
<h1 id="汉化包"><a href="#汉化包" class="headerlink" title="汉化包"></a>汉化包</h1><p>如需汉化软件请打开如下网盘地址获取<br>链接：<a href="https://pan.baidu.com/s/1duUpA1sEzHOUA5U0yrf1ww" target="_blank" rel="noopener">https://pan.baidu.com/s/1duUpA1sEzHOUA5U0yrf1ww</a><br>提取码：yu2f</p>
<h1 id="全家桶最新版下载地址"><a href="#全家桶最新版下载地址" class="headerlink" title="全家桶最新版下载地址"></a>全家桶最新版下载地址</h1><ol>
<li>IntelliJ IDEA Ultimate   <a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">Windows</a>   <a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=mac" target="_blank" rel="noopener">Mac</a>   <a href="https://www.jetbrains.com/idea/download/download-thanks.html?platform=linux" target="_blank" rel="noopener">Linux</a></li>
<li>PyCharm    <a href="https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">Windows</a>   <a href="https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=mac" target="_blank" rel="noopener">Mac</a>   <a href="https://www.jetbrains.com/pycharm/download/download-thanks.html?platform=linux" target="_blank" rel="noopener">Linux</a></li>
<li>WebStorm    <a href="https://www.jetbrains.com/webstorm/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">Windows</a>   <a href="https://www.jetbrains.com/webstorm/download/download-thanks.html?platform=mac" target="_blank" rel="noopener">Mac</a>   <a href="https://www.jetbrains.com/webstorm/download/download-thanks.html?platform=linux" target="_blank" rel="noopener">Linux</a></li>
<li>GoLand    <a href="https://www.jetbrains.com/go/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">Windows</a>   <a href="https://www.jetbrains.com/go/download/download-thanks.html?platform=mac" target="_blank" rel="noopener">Mac</a>   <a href="https://www.jetbrains.com/go/download/download-thanks.html?platform=linux" target="_blank" rel="noopener">Linux</a></li>
<li>DataGrip    <a href="https://www.jetbrains.com/datagrip/download/download-thanks.html?platform=windows" target="_blank" rel="noopener">Windows</a>   <a href="https://www.jetbrains.com/datagrip/download/download-thanks.html?platform=mac" target="_blank" rel="noopener">Mac</a>   <a href="https://www.jetbrains.com/datagrip/download/download-thanks.html?platform=linux" target="_blank" rel="noopener">Linux</a></li>
</ol>
<h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><ol>
<li>账号都是一年激活一次，永久的话会持续激活维护</li>
<li>edu教育邮箱除了可以申请激活Jetbrains外，还有微软、Apple Music等多项羊毛可薅。</li>
</ol>
<h1 id="联系方式"><a href="#联系方式" class="headerlink" title="联系方式"></a>联系方式</h1><p>可扫描以下二维码添加，售后复购更方便~</p>
<p><img data-src="https://i.loli.net/2021/04/14/vDOVjHWEhMIruCX.png" alt=""></p>
]]></content>
      <categories>
        <category>Jetbrains</category>
      </categories>
      <tags>
        <tag>Jetbrains</tag>
      </tags>
  </entry>
  <entry>
    <title>Pycharm本地连接Kudu及写入Kafka和Hive</title>
    <url>/2021/04/13/Pycharm%E6%9C%AC%E5%9C%B0%E8%BF%9E%E6%8E%A5Kudu%E5%8F%8A%E5%86%99%E5%85%A5Kafka/</url>
    <content><![CDATA[<h1 id="连接Apollo"><a href="#连接Apollo" class="headerlink" title="连接Apollo"></a>连接Apollo</h1><p>Apollo（阿波罗）是携程框架部门研发的开源配置管理中心，能够集中化管理应用不同环境、不同集群的配置，配置修改后能够实时推送到应用端，并且具备规范的权限、流程治理等特性。</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> pyapollo</span><br><span class="line"></span><br><span class="line">client = pyapollo.ApolloClient(app_id=<span class="string">"iov-vehicle-track-point-hbase"</span>, config_server_url=<span class="string">"http://172.16.1.69:8080"</span>)</span><br><span class="line">client.start()</span><br><span class="line">print(client.get_value(<span class="string">"checkpoint"</span>))</span><br></pre></td></tr></table></figure>

<h1 id="读取Kudu"><a href="#读取Kudu" class="headerlink" title="读取Kudu"></a>读取Kudu</h1><p>下载<a href="http://spark.apache.org/downloads.html" target="_blank" rel="noopener">spark</a>文件，目前所用版本为spark-2.4.5-bin-hadoop2.7.tgz，下载后解压到某一目录。</p>
<p>当前项目点击edit configurations，</p>
<p><img data-src="https://i.loli.net/2020/05/18/PYcX2gDoORvj5np.png" alt=""></p>
<p>进入环境变量</p>
<p><img data-src="https://i.loli.net/2020/05/18/jdyZLRrhgc2IGVW.png" alt=""></p>
<p>新增三个变量</p>
<p><img data-src="https://i.loli.net/2020/05/18/YMlvU8CWfaB7435.png" alt=""></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">PYSPARK_SUBMIT_ARGS&#x3D;--master local[2] --packages org.apache.spark:spark-sql-kafka-0-10_2.11:2.4.3,org.apache.kudu:kudu-spark2_2.11:1.11.1 pyspark-shell</span><br></pre></td></tr></table></figure>

<p>使用–packages而不是–jars是因为涉及到很多依赖，会自动下载。</p>
<p>打开Project Structure，Add Content Root，新增两个zip文件，路径在spark-2.4.5-bin-hadoop2.7\python\lib下</p>
<p><img data-src="https://i.loli.net/2020/05/18/7R8N6xckY2uDfI4.png" alt=""></p>
<p>相关python代码如下：</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql <span class="keyword">import</span> SparkSession</span><br><span class="line"></span><br><span class="line">spark = SparkSession \</span><br><span class="line">    .builder \</span><br><span class="line">    .appName(<span class="string">"ts_predict"</span>) \</span><br><span class="line">    .config(<span class="string">"spark.sql.execution.arrow.enabled"</span>, <span class="string">"true"</span>) \</span><br><span class="line">    .getOrCreate()</span><br><span class="line">spark.sparkContext.setLogLevel(<span class="string">'ERROR'</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">"Running pyspark programme"</span>)</span><br><span class="line">kuduDF = spark.read.format(<span class="string">'kudu'</span>) \</span><br><span class="line">    .option(<span class="string">'kudu.master'</span>, <span class="string">"172.16.16.244:7051,172.16.16.251:7051,172.16.16.252:7051"</span>) \</span><br><span class="line">    .option(<span class="string">'kudu.table'</span>, <span class="string">"db_test.adsrt_mob_dri_route_15min"</span>) \</span><br><span class="line">    .load()</span><br><span class="line">routeDf = kuduDF.filter(<span class="string">f"substr(ds,1,8) &gt; '20200422'"</span>).cache()</span><br></pre></td></tr></table></figure>

<h1 id="sparkDf写入Kafka"><a href="#sparkDf写入Kafka" class="headerlink" title="sparkDf写入Kafka"></a>sparkDf写入Kafka</h1><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> pyspark.sql.functions <span class="keyword">import</span> to_json, struct</span><br><span class="line">brokers = <span class="string">'172.16.19.171:9092,172.16.19.172:9092,172.16.19.173:9092'</span></span><br><span class="line">topic= xxx</span><br><span class="line">columns = [<span class="string">"stats_date"</span>, <span class="string">"city_code"</span>, <span class="string">"city_name"</span>, <span class="string">"pred_cnt"</span>]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">write_to_kafka</span><span class="params">(df, brokers, topic, columns)</span>:</span></span><br><span class="line">    df.select(to_json(struct([df[x] <span class="keyword">for</span> x <span class="keyword">in</span> columns])).alias(<span class="string">"value"</span>)) \</span><br><span class="line">        .write.format(<span class="string">"kafka"</span>).option(<span class="string">"kafka.bootstrap.servers"</span>, brokers).option(<span class="string">"topic"</span>, topic) \</span><br><span class="line">        .save()</span><br></pre></td></tr></table></figure>

<p>如果是pandas的DataFrame，则需要先转换为spark的DataFrame</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sparkDf = spark.createDataFrame(pandasDf)</span><br></pre></td></tr></table></figure>

<h1 id="sparkDf写入Hive"><a href="#sparkDf写入Hive" class="headerlink" title="sparkDf写入Hive"></a>sparkDf写入Hive</h1><p>首先Hive建表</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">create table if not exists ml.t3_ml_ts_pred_call(stats_date string comment &#39;待预测时间片&#39;, pred_cnt double comment &#39;预测值&#39;, city_code string comment &#39;城市编码&#39;, city_name string comment &#39;城市名&#39;, pred_date string comment &#39;程序执行时间片&#39;) partition by (dt string comment &#39;日期&#39;)</span><br></pre></td></tr></table></figure>

<p>然后写入Hive表</p>
<figure class="highlight python"><table><tr><td class="code"><pre><span class="line">sparkDf.write.format(<span class="string">"hive"</span>).partitionBy(<span class="string">"dt"</span>).mode(<span class="string">"append"</span>).saveAsTable(<span class="string">"ml.t3_ml_ts_pred_call"</span>)</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>Spark</category>
      </categories>
      <tags>
        <tag>Pycharm</tag>
        <tag>Apollo</tag>
        <tag>Kudu</tag>
        <tag>Kafka</tag>
        <tag>Hive</tag>
      </tags>
  </entry>
  <entry>
    <title>Pandas拾遗</title>
    <url>/2021/04/13/Pandas%E6%8B%BE%E9%81%97/</url>
    <content><![CDATA[<h2 id="pandas中截取一列字符串中每行字符串的一部分"><a href="#pandas中截取一列字符串中每行字符串的一部分" class="headerlink" title="pandas中截取一列字符串中每行字符串的一部分"></a>pandas中截取一列字符串中每行字符串的一部分</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">'col'</span>].str[<span class="number">1</span>:<span class="number">4</span>]</span><br></pre></td></tr></table></figure>

<h2 id="pandas更改列名"><a href="#pandas更改列名" class="headerlink" title="pandas更改列名"></a>pandas更改列名</h2><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">df.rename(columns&#x3D;&#123;&quot;a1&quot;: &quot;a2&quot;, &quot;b1&quot;: &quot;b2&quot;&#125;, inplace&#x3D;True)</span><br></pre></td></tr></table></figure>

<h2 id="pandas读取csv-xls文件时指定列的数据类型"><a href="#pandas读取csv-xls文件时指定列的数据类型" class="headerlink" title="pandas读取csv/xls文件时指定列的数据类型"></a>pandas读取csv/xls文件时指定列的数据类型</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">converters = &#123;<span class="string">"stats_date"</span>: str, <span class="string">"city_code"</span>: str, <span class="string">"call_route_cnt"</span>: int, <span class="string">"reply_route_cnt"</span>: int, <span class="string">"business_id"</span>: int&#125;</span><br><span class="line">df = pd.read_csv(csv_path, converters=converters)</span><br></pre></td></tr></table></figure>

<h2 id="pandas处理某列"><a href="#pandas处理某列" class="headerlink" title="pandas处理某列"></a>pandas处理某列</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">df[<span class="string">"列名"</span>]=df.apply(<span class="keyword">lambda</span> x:方法名(x,入参<span class="number">2</span>),axis=<span class="number">1</span>)</span><br></pre></td></tr></table></figure>

<p><strong>说明：</strong></p>
<p>1、方法名为单独的方法名，可以处理传入的x数据</p>
<p>2、x为每一行的数据，做为方法的入参1；x中的数据可以用【x.列名】来获取</p>
<p>3、入参2等为方法需要的其他参数，不需要可以不写</p>
<p>4、axis=1，表示每次取一行数据进行处理，按行处理</p>
]]></content>
      <categories>
        <category>Pandas</category>
      </categories>
      <tags>
        <tag>Python</tag>
        <tag>Pandas</tag>
      </tags>
  </entry>
  <entry>
    <title>Ubuntu相关环境问题</title>
    <url>/2021/04/13/Ubuntu%E7%9B%B8%E5%85%B3%E7%8E%AF%E5%A2%83%E9%97%AE%E9%A2%98/</url>
    <content><![CDATA[<p>以下所有内容均在Ubuntu18.04下</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">root@t3-local-alhzfz-ecs-dispatchingbu-ai-training-01:~<span class="comment"># cat /etc/*release</span></span><br><span class="line">DISTRIB_ID=Ubuntu</span><br><span class="line">DISTRIB_RELEASE=18.04</span><br><span class="line">DISTRIB_CODENAME=bionic</span><br><span class="line">DISTRIB_DESCRIPTION=<span class="string">"Ubuntu 18.04.4 LTS"</span></span><br><span class="line">NAME=<span class="string">"Ubuntu"</span></span><br><span class="line">VERSION=<span class="string">"18.04.4 LTS (Bionic Beaver)"</span></span><br><span class="line">ID=ubuntu</span><br><span class="line">ID_LIKE=debian</span><br><span class="line">PRETTY_NAME=<span class="string">"Ubuntu 18.04.4 LTS"</span></span><br><span class="line">VERSION_ID=<span class="string">"18.04"</span></span><br><span class="line">HOME_URL=<span class="string">"https://www.ubuntu.com/"</span></span><br><span class="line">SUPPORT_URL=<span class="string">"https://help.ubuntu.com/"</span></span><br><span class="line">BUG_REPORT_URL=<span class="string">"https://bugs.launchpad.net/ubuntu/"</span></span><br><span class="line">PRIVACY_POLICY_URL=<span class="string">"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy"</span></span><br><span class="line">VERSION_CODENAME=bionic</span><br><span class="line">UBUNTU_CODENAME=bionic</span><br></pre></td></tr></table></figure>

<hr>
<h2 id="Ubuntu更换国内源"><a href="#Ubuntu更换国内源" class="headerlink" title="Ubuntu更换国内源"></a>Ubuntu更换国内源</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">sudo chmod 777 /etc/apt/source.list</span><br><span class="line">sudo vi /etc/apt/sources.list</span><br><span class="line">sudo apt update</span><br></pre></td></tr></table></figure>

<h4 id="阿里源"><a href="#阿里源" class="headerlink" title="阿里源:"></a>阿里源:</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>

<h4 id="清华源"><a href="#清华源" class="headerlink" title="清华源"></a>清华源</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src https:&#x2F;&#x2F;mirrors.tuna.tsinghua.edu.cn&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br></pre></td></tr></table></figure>

<h4 id="163源"><a href="#163源" class="headerlink" title="163源"></a>163源</h4><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.163.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure>

<h2 id="ModuleNotFoundError-No-module-named-‘cv2’"><a href="#ModuleNotFoundError-No-module-named-‘cv2’" class="headerlink" title="ModuleNotFoundError: No module named ‘cv2’"></a>ModuleNotFoundError: No module named ‘cv2’</h2><p>在线安装：</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install opencv-python</span><br></pre></td></tr></table></figure>

<p>下载安装：</p>
<p><a href="https://pypi.org/" target="_blank" rel="noopener">pypi</a>下载对应系统和python版本的whl文件，手动安装</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install opencv_python-4.2.0.34-cp36-cp36m-manylinux1_x86_64.whl</span><br></pre></td></tr></table></figure>

<h2 id="ImportError-libgthread-2-0-so-0-cannot-open-shared-object-file-No-such-file-or-directory"><a href="#ImportError-libgthread-2-0-so-0-cannot-open-shared-object-file-No-such-file-or-directory" class="headerlink" title="ImportError: libgthread-2.0.so.0: cannot open shared object file: No such file or directory"></a>ImportError: libgthread-2.0.so.0: cannot open shared object file: No such file or directory</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install libglib2.0-0</span><br></pre></td></tr></table></figure>

<h2 id="ImportError-libSM-so-6-cannot-open-shared-object-file-No-such-file-or-directory"><a href="#ImportError-libSM-so-6-cannot-open-shared-object-file-No-such-file-or-directory" class="headerlink" title="ImportError: libSM.so.6: cannot open shared object file: No such file or directory"></a>ImportError: libSM.so.6: cannot open shared object file: No such file or directory</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install libsm6</span><br></pre></td></tr></table></figure>

<h2 id="ImportError-libXrender-so-1-cannot-open-shared-object-file-No-such-file-or-directory"><a href="#ImportError-libXrender-so-1-cannot-open-shared-object-file-No-such-file-or-directory" class="headerlink" title="ImportError: libXrender.so.1: cannot open shared object file: No such file or directory"></a>ImportError: libXrender.so.1: cannot open shared object file: No such file or directory</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install libxrender1</span><br></pre></td></tr></table></figure>

<h2 id="ImportError-libXext-so-6-cannot-open-shared-object-file-No-such-file-or-directory"><a href="#ImportError-libXext-so-6-cannot-open-shared-object-file-No-such-file-or-directory" class="headerlink" title="ImportError: libXext.so.6: cannot open shared object file: No such file or directory"></a>ImportError: libXext.so.6: cannot open shared object file: No such file or directory</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install libxext-dev</span><br></pre></td></tr></table></figure>

<h2 id="ModuleNotFoundError-No-module-named-‘PIL’"><a href="#ModuleNotFoundError-No-module-named-‘PIL’" class="headerlink" title="ModuleNotFoundError: No module named ‘PIL’"></a>ModuleNotFoundError: No module named ‘PIL’</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">pip install pillow</span><br></pre></td></tr></table></figure>

<h2 id="安装docker"><a href="#安装docker" class="headerlink" title="安装docker"></a>安装docker</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">apt-get install docker.io</span><br></pre></td></tr></table></figure>

<p>查看docker version</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker -v</span><br><span class="line">Docker version 19.03.6, build 369ce74a3c</span><br></pre></td></tr></table></figure>

<h2 id="安装NVIDIA-Docker"><a href="#安装NVIDIA-Docker" class="headerlink" title="安装NVIDIA Docker"></a>安装NVIDIA Docker</h2><p>参考<a href="https://github.com/NVIDIA/nvidia-docker" target="_blank" rel="noopener">nvidia-docker</a></p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">distribution&#x3D;$(. &#x2F;etc&#x2F;os-release;echo $ID$VERSION_ID)</span><br><span class="line">curl -s -L https:&#x2F;&#x2F;nvidia.github.io&#x2F;nvidia-docker&#x2F;gpgkey | sudo apt-key add -</span><br><span class="line">curl -s -L https:&#x2F;&#x2F;nvidia.github.io&#x2F;nvidia-docker&#x2F;$distribution&#x2F;nvidia-docker.list | sudo tee &#x2F;etc&#x2F;apt&#x2F;sources.list.d&#x2F;nvidia-docker.list</span><br><span class="line"></span><br><span class="line">sudo apt-get update &amp;&amp; sudo apt-get install -y nvidia-container-toolkit</span><br><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure>

<p>测试是否安装成功，下面分别是Tesla P100和T4的卡。</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@local-t3-carla01:~# docker run --gpus all --rm --init -it  nvidia&#x2F;cuda:10.0-base nvidia-smi </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 440.95.01    Driver Version: 440.95.01    CUDA Version: 10.2     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage&#x2F;Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</span><br><span class="line">|   0  Tesla P100-PCIE...  Off  | 00000000:00:09.0 Off |                    0 |</span><br><span class="line">| N&#x2F;A   29C    P0    27W &#x2F; 250W |      0MiB &#x2F; 16280MiB |      4%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>

<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">root@t3-local-alhzfz-ecs-dispatchingbu-ai-training-01:~# docker run --gpus all --rm --init -it  nvidia&#x2F;cuda:10.0-base nvidia-smi </span><br><span class="line">Thu Jul  2 06:30:58 2020       </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| NVIDIA-SMI 430.63       Driver Version: 430.63       CUDA Version: 10.1     |</span><br><span class="line">|-------------------------------+----------------------+----------------------+</span><br><span class="line">| GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |</span><br><span class="line">| Fan  Temp  Perf  Pwr:Usage&#x2F;Cap|         Memory-Usage | GPU-Util  Compute M. |</span><br><span class="line">|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;+&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</span><br><span class="line">|   0  Tesla T4            On   | 00000000:00:08.0 Off |                    0 |</span><br><span class="line">| N&#x2F;A   33C    P8    15W &#x2F;  70W |      0MiB &#x2F; 15109MiB |      0%      Default |</span><br><span class="line">+-------------------------------+----------------------+----------------------+</span><br><span class="line">                                                                               </span><br><span class="line">+-----------------------------------------------------------------------------+</span><br><span class="line">| Processes:                                                       GPU Memory |</span><br><span class="line">|  GPU       PID   Type   Process name                             Usage      |</span><br><span class="line">|&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;|</span><br><span class="line">|  No running processes found                                                 |</span><br><span class="line">+-----------------------------------------------------------------------------+</span><br></pre></td></tr></table></figure>

<p>如果报下面的错误，再重启下docker</p>
<p>docker: Error response from daemon: could not select device driver “” with capabilities: [[gpu]].</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Ubuntu</category>
      </categories>
      <tags>
        <tag>Ubuntu</tag>
        <tag>CV</tag>
      </tags>
  </entry>
  <entry>
    <title>Spark拾遗</title>
    <url>/2021/04/13/Spark%E6%8B%BE%E9%81%97/</url>
    <content><![CDATA[<h2 id="spark-overwrite分区覆盖导致全表覆盖问题"><a href="#spark-overwrite分区覆盖导致全表覆盖问题" class="headerlink" title="spark overwrite分区覆盖导致全表覆盖问题"></a>spark overwrite分区覆盖导致全表覆盖问题</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line">set hive.<span class="keyword">exec</span>.dynamic.partition=true; </span><br><span class="line">set hive.<span class="keyword">exec</span>.dynamic.partition.mode=nonstrict;</span><br><span class="line">spark.conf.set(<span class="string">"spark.sql.sources.partitionOverwriteMode"</span>,<span class="string">"dynamic"</span>)</span><br><span class="line">df.write.mode(saveMode).insertInto(table)</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>Spark</category>
      </categories>
      <tags>
        <tag>Spark</tag>
        <tag>Scala</tag>
      </tags>
  </entry>
  <entry>
    <title>docker拾遗</title>
    <url>/2021/04/13/docker%E6%8B%BE%E9%81%97/</url>
    <content><![CDATA[<h2 id="docker后台启动容器"><a href="#docker后台启动容器" class="headerlink" title="docker后台启动容器"></a>docker后台启动容器</h2><p>-d参数</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker run --gpus all --name pytorch_chy -itd -v /home/chengy:/workspace   pytorch/pytorch:1.5.1-cuda10.1-cudnn7-runtime-cv2 /bin/bash</span><br><span class="line"></span><br><span class="line">root@t3-local-alhzfz-ecs-dispatchingbu-ai-training-01:/home/chengy/FaceMaskDetection<span class="comment"># docker ps -a</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND             CREATED             STATUS              PORTS               NAMES</span><br><span class="line">2c17ed69e994        505a4186e3d9        <span class="string">"/bin/bash"</span>         About an hour ago   Up About an hour                     pytorch_chy</span><br><span class="line"></span><br><span class="line">root@t3-local-alhzfz-ecs-dispatchingbu-ai-training-01:/home/chengy/FaceMaskDetection<span class="comment"># docker attach 2</span></span><br><span class="line">root@2c17ed69e994:/workspace<span class="comment"># ll</span></span><br><span class="line">total 27516</span><br><span class="line">drwxrwxrwx 3 root root     4096 Jul  2 14:22 ./</span><br><span class="line">drwxr-xr-x 1 root root     4096 Jul  2 13:18 ../</span><br><span class="line">drwxrwxr-x 8 1000 1000     4096 Jul  2 14:26 FaceMaskDetection/</span><br><span class="line">-rw-rw-r-- 1 1000 1000 28156745 Jul  2 08:48 opencv_python-4.2.0.34-cp37-cp37m-manylinux1_x86_64.whl</span><br><span class="line">-rw-rw-r-- 1 1000 1000     3676 Jul  2 08:57 sources.list</span><br></pre></td></tr></table></figure>

<p>如果要正常退出不关闭容器，请按<strong>Ctrl+P+Q</strong>进行退出容器，否则容器就会变成Exited的状态</p>
<h2 id="docker共享宿主机与镜像目录"><a href="#docker共享宿主机与镜像目录" class="headerlink" title="docker共享宿主机与镜像目录"></a>docker共享宿主机与镜像目录</h2><p>-v 参数，宿主机目录:docker镜像目录</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">docker run --gpus all --name pytorch_chy -itd -v &#x2F;home&#x2F;chengy:&#x2F;workspace   pytorch&#x2F;pytorch:1.5.1-cuda10.1-cudnn7-runtime-cv2 &#x2F;bin&#x2F;bash</span><br></pre></td></tr></table></figure>

<h2 id="docker保存镜像"><a href="#docker保存镜像" class="headerlink" title="docker保存镜像"></a>docker保存镜像</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">docker commit 2c17ed69e994 pytorch/pytorch:1.5.1-cuda10.1-cudnn7-runtime-cv2</span><br><span class="line">root@t3-local-alhzfz-ecs-dispatchingbu-ai-training-01:/home/chengy/FaceMaskDetection<span class="comment"># docker images</span></span><br><span class="line">REPOSITORY          TAG                                 IMAGE ID            CREATED             SIZE</span><br><span class="line">pytorch/pytorch     1.5.1-cuda10.1-cudnn7-runtime-cv2   bdc2cf9c30fc        15 minutes ago      3.37GB</span><br><span class="line">pytorch/pytorch     1.5.1-cuda10.1-cudnn7-runtime       d89e4943dd55        13 days ago         3.14GB</span><br><span class="line">nvidia/cuda         10.0-base                           841d44dd4b3c        7 months ago        110MB</span><br></pre></td></tr></table></figure>

<h2 id="docker修改为国内镜像源"><a href="#docker修改为国内镜像源" class="headerlink" title="docker修改为国内镜像源"></a>docker修改为国内镜像源</h2><p>在 /etc/docker/daemon.json 文件中添加以下参数（没有该文件则新建）：</p>
<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">   &quot;registry-mirrors&quot; : [&quot;https:&#x2F;&#x2F;9cpn8tt6.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>最后重启服务</p>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">service docker restart</span><br></pre></td></tr></table></figure>

]]></content>
      <categories>
        <category>docker</category>
      </categories>
      <tags>
        <tag>docker</tag>
      </tags>
  </entry>
</search>
